<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="https://itsdennian.github.io//feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator><link href="https://itsdennian.github.io//feed.xml" rel="self" type="application/atom+xml" /><link href="https://itsdennian.github.io//" rel="alternate" type="text/html" /><updated>2018-07-03T12:13:13+05:30</updated><id>https://itsdennian.github.io//</id><title type="html">Denny Sam</title><subtitle>Creative individual with many pasions, but learning, problem solving and working on innovative ideas dominate the list. Worked with over 15 frameworks and languages. Curently working with frameworks like ReactJS along with doing UI/UX research. Interested in getting into research and analysis of inteligent systems</subtitle><entry><title type="html">How I hacked the website of Clean and Clear Fresh Face 2015!</title><link href="https://itsdennian.github.io//hacking/" rel="alternate" type="text/html" title="How I hacked the website of Clean and Clear Fresh Face 2015!" /><published>2015-09-06T00:00:00+05:30</published><updated>2015-09-06T00:00:00+05:30</updated><id>https://itsdennian.github.io//hacking</id><content type="html" xml:base="https://itsdennian.github.io//hacking/">&lt;p&gt;&lt;strong&gt;Well, this is not really a huge hack. Like I didn’t access the whole database or servers or killed their website or posted porn. But technically speaking I hacked it. I found a flaw which I could manipulate so that anyone I wish can win this year’s competition!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So here the story begins. One of my close friends in first year texted me in the morning, the same way he texted everyone else on his broadcast list, a link to his profile for this year’s Fresh Face and asked me to vote for him. I agreed.&lt;/p&gt;

&lt;p&gt;Since a few weeks, I was focusing on hacking and was reading about the hacks happened in the history. The phone hacks of 80’s, the crash of AT&amp;amp;T on Jan 15 1990, some accounts of Kevin Mitnick and the life story of Adrian Lamo (both of them being genius hackers). I watched “Citizenfour” yesternight, the story of Edward Snowden who revealed proofs of NSA spying on us.&lt;/p&gt;

&lt;p&gt;All this resulted in an admiration for the hacker culture and a desire to be a part of it.&lt;/p&gt;

&lt;p&gt;As soon as I received his message, I went to the site, voted him.&lt;/p&gt;

&lt;p&gt;But I was shocked to see that the site had negligible amount of security implemented. No kind of verification was required to vote someone. I got suspicious. I analysed the source code. I saw that the vote button simply triggered a javascript function which was named ‘saveVote’. I thought who the heck named it so obvious that you can figure out what it does pretty easily. I didn’t have to go through its code to figure out what it does. It basically saved the vote.&lt;/p&gt;

&lt;p&gt;I started digging deeper and deeper. Now I figured out that the session should be saved in a cookie which tells whether you have voted a particular person or not. That means if the cookie is gone, the session is gone and so is the vote. I disabled cookie storage of the browser. Voila!! When I reloaded the page, I could vote again. I made a python script to automate this process and setup a proxy server using Tor so that it seems like the votes are coming from various parts of the ‘world’.&lt;/p&gt;

&lt;p&gt;The python script automatically opens the browser, goes to the specified URL, votes the person and closes the window. This process goes on until the loop ends. And the repetition of the loop is decide by a variable I have set. It can be 5000, it can be a Lac.&lt;/p&gt;

&lt;p&gt;Further I re-did the hack after two weeks, this time with a different approach. After getting the knowledge of how XHR (XMLHttpRequest) works, I made a Python code to send out automatic requests to the website. The site’s security was so low that it was easy for me to send these requests and get a vote. Btw, let me tell you a lame thing they did. Every request contains a user token and you can’t use the same token for getting two votes, otherwise it reports an ‘invalid transaction’ error. But if you don’t supply a user token then it won’t even check whether there is a token! That means I can make the requests w/o a user token and it won’t show an error. But as the pattern of the user token was predictable, I made a random sequence generator out of Python which looked like the one generated by the fresh face site. So voila! I am undetectable. There was a pause for a random number of seconds between each request so that it reflects the behavior of a human who is doing it manually.&lt;/p&gt;

&lt;p&gt;I now have a lot of control. This is not just the issue of the Pune Fresh Face site. All the states’ sites are having the same flaw. I could basically decide who gets the highest votes.&lt;/p&gt;

&lt;p&gt;Now, I think I should not let my friend win. I don’t think it’s a good move. Anyways thanks buddy. Today was heavily productive because of you. But let’s not win like this. Let’s do something else with this knowledge.&lt;/p&gt;</content><category term="Hacking" /><category term="computer science" /><summary type="html">Well, this is not really a huge hack. Like I didn’t access the whole database or servers or killed their website or posted porn. But technically speaking I hacked it. I found a flaw which I could manipulate so that anyone I wish can win this year’s competition!</summary></entry></feed>
